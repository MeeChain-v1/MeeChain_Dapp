/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IERC721Mintable, IERC721MintableInterface } from "../../interfaces/IERC721Mintable.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserHighestTier",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint8",
        "name": "tier",
        "type": "uint8"
      }
    ],
    "name": "hasTierNFT",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint8",
        "name": "tier",
        "type": "uint8"
      }
    ],
    "name": "mintReward",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  export class IERC721Mintable__factory {
    static readonly abi = _abi;
    static createInterface(): IERC721MintableInterface {
      return new Interface(_abi) as IERC721MintableInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IERC721Mintable {
      return new Contract(address, _abi, runner) as unknown as IERC721Mintable;
    }
  }
  