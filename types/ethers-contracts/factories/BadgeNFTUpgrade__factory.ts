/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { BadgeNFTUpgrade, BadgeNFTUpgradeInterface } from "../BadgeNFTUpgrade.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_meeToken",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_badgeNFT",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "EnforcedPause",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ExpectedPause",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "fromRarity",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "toRarity",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "cost",
        "type": "uint256"
      }
    ],
    "name": "BadgeUpgraded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Paused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "fromRarity",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "toRarity",
        "type": "uint8"
      }
    ],
    "name": "RarityProgressionUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Unpaused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "rarity",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newCost",
        "type": "uint256"
      }
    ],
    "name": "UpgradeCostUpdated",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "badgeNFT",
    "outputs": [
      {
        "internalType": "contract MeeBadgeNFT",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "canUpgradeBadge",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      },
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getNextRarity",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "rarity",
        "type": "uint8"
      }
    ],
    "name": "getRarityName",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getUpgradeCost",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "meeToken",
    "outputs": [
      {
        "internalType": "contract MeeToken",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "paused",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "name": "rarityProgression",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "fromRarity",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "toRarity",
        "type": "uint8"
      }
    ],
    "name": "setRarityProgression",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "rarity",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "cost",
        "type": "uint256"
      }
    ],
    "name": "setUpgradeCost",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "unpause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_badgeNFT",
        "type": "address"
      }
    ],
    "name": "updateBadgeNFT",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_meeToken",
        "type": "address"
      }
    ],
    "name": "updateMeeToken",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "upgradeBadge",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "name": "upgradeCosts",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60803461025757601f61151b38819003918201601f19168301916001600160401b0383118484101761025b57808492604094855283398101031261025757610052602061004b8361026f565b920161026f565b3315610244575f8054336001600160a01b0319821681178355604051949290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001808055600280546001600160a01b03199081166001600160a01b03948516178255600380549091169490931693909317825568056bc75e2d631000007f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec55680d8d726b7177a800007fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0555681b1ae4d6e2ef5000007f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a755683635c9adc5dea000007f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa05560056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc805460ff1990811690921790557f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b805482169093179092557f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a80548316821790555f527fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc08054909116600417905561129790816102848239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036102575756fe60806040526004361015610011575f80fd5b5f5f3560e01c80631d157ca714610aaf57806325df233a14610a6c5780632c43882914610a12578063354a75c2146109e05780633f4ba83a146109745780634348e0e91461094c5780634d0d717f1461089f5780635c975abb1461087b578063656bbbfa14610853578063715018a6146107fc57806375057e1d146107c0578063778157331461078b5780638456cb591461072b5780638da5cb5b1461070457806396e747ed146106c1578063bd6515ec146105a1578063dc6d0a12146101ca578063f2fde38b146101445763ff329e7c146100eb575f80fd5b3461014157602036600319011261014157604060209160ff60c0610110600435610fd3565b015161011b81610baf565b61012481610baf565b1661013160048210610e20565b8152600483522054604051908152f35b80fd5b50346101415760203660031901126101415761015e610afe565b61016661121e565b6001600160a01b031680156101b65781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346103eb5760203660031901126103eb576004356002600154146105925760026001556101f6611244565b6003546040516331a9108f60e11b81526004810183905290602090829060249082906001600160a01b03165afa9081156103e0575f91610558575b50336001600160a01b03909116036105215761024c81610fd3565b6101a060c08201519161025e83610baf565b61026783610baf565b0151156104e45760ff1661027d60048210610e20565b805f52600560205260ff60405f2054168181111561049f57815f52600460205260405f2054908115610463576002546040516370a0823160e01b81523360048201526001600160a01b0390911690602081602481855afa80156103e05784915f9161042e575b50106103ef57803b156103eb575f8091604460405180948193632770a7eb60e21b83523360048401528860248401525af180156103e0576103cb575b5060035485906001600160a01b0316803b156103c757818091604460405180948193631e721b6360e31b83528b60048401528860248401525af180156103bc576103a3575b5050604051928352602083015260408201527fc245dd062f718231e452a9b49243bba64ab814484c290d8f935a5049344f5afe60603392a36001805580f35b816103ad91610b79565b6103b857845f610364565b8480fd5b6040513d84823e3d90fd5b5080fd5b6103d89195505f90610b79565b5f935f61031f565b6040513d5f823e3d90fd5b5f80fd5b60405162461bcd60e51b8152602060048201526017602482015276496e73756666696369656e74204d454520746f6b656e7360481b6044820152606490fd5b9150506020813d60201161045b575b8161044a60209383610b79565b810103126103eb578390515f6102e3565b3d915061043d565b60405162461bcd60e51b8152602060048201526014602482015273155c19dc9859194818dbdcdd081b9bdd081cd95d60621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964207261726974792070726f6772657373696f6e0000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744261646765206e6f74207570677261646561626c6560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e2737ba103130b233b29037bbb732b960891b6044820152606490fd5b90506020813d60201161058a575b8161057360209383610b79565b810103126103eb5761058490610b9b565b5f610231565b3d9150610566565b633ee5aeb560e01b5f5260045ffd5b346103eb5760403660031901126103eb576105ba610b38565b6024359060ff82168092036103eb5760ff906105d461121e565b169060048210806106b6575b15610679578181111561063457816040917f9d2e4f8652d2fa3ee525f88bca281a39dd9d57300d684b20eed3d8e43258b50f935f526005602052825f208160ff1982541617905582519182526020820152a1005b60405162461bcd60e51b815260206004820152601c60248201527f54617267657420726172697479206d75737420626520686967686572000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420726172697479206c6576656c7360581b6044820152606490fd5b5060048111156105e0565b346103eb5760203660031901126103eb576106da610afe565b6106e261121e565b600280546001600160a01b0319166001600160a01b0392909216919091179055005b346103eb575f3660031901126103eb575f546040516001600160a01b039091168152602090f35b346103eb575f3660031901126103eb5761074361121e565b61074b611244565b5f805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b346103eb5760203660031901126103eb5760ff6107a6610b38565b165f526005602052602060ff60405f205416604051908152f35b346103eb5760203660031901126103eb576107f86107e46107df610b38565b610e6c565b604051918291602083526020830190610b14565b0390f35b346103eb575f3660031901126103eb5761081461121e565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103eb575f3660031901126103eb576002546040516001600160a01b039091168152602090f35b346103eb575f3660031901126103eb57602060ff5f5460a01c166040519015158152f35b346103eb5760403660031901126103eb576108b8610b38565b60ff602435916108c661121e565b1690600482101561091057816040917fa0a3a99a60a4b9d68d0dcfc761cf79fd5d00bbfb4e76d129afbfbc37ace50783935f52600460205280835f205582519182526020820152a1005b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081c985c9a5d1e481b195d995b60621b6044820152606490fd5b346103eb575f3660031901126103eb576003546040516001600160a01b039091168152602090f35b346103eb575f3660031901126103eb5761098c61121e565b5f5460ff8160a01c16156109d15760ff60a01b19165f556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1005b638dfc202b60e01b5f5260045ffd5b346103eb5760203660031901126103eb5760ff6109fb610b38565b165f526004602052602060405f2054604051908152f35b346103eb5760203660031901126103eb5760ff60c0610a32600435610fd3565b0151610a3d81610baf565b610a4681610baf565b16610a5360048210610e20565b5f526005602052602060ff60405f205416604051908152f35b346103eb5760203660031901126103eb57610a85610afe565b610a8d61121e565b600380546001600160a01b0319166001600160a01b0392909216919091179055005b346103eb5760403660031901126103eb576024356001600160a01b03811681036103eb57610adf90600435610bcd565b906107f860405192839215158352604060208401526040830190610b14565b600435906001600160a01b03821682036103eb57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6004359060ff821682036103eb57565b6101c0810190811067ffffffffffffffff821117610b6557604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610b6557604052565b51906001600160a01b03821682036103eb57565b60051115610bb957565b634e487b7160e01b5f52602160045260245ffd5b6003546040516331a9108f60e11b8152600481018390529290602090849060249082906001600160a01b03165afa9283156103e0575f93610de4575b506001600160a01b039081169216829003610db357610c2790610fd3565b6101a060c082015191610c3983610baf565b610c4283610baf565b015115610d7c5760ff166004811015610d3d575f52600460205260405f205490602060018060a01b0360025416916024604051809481936370a0823160e01b835260048301525afa9081156103e0575f91610d0b575b5010610cd457600190604051610caf604082610b79565b601581527410985919d94818d85b881899481d5c19dc98591959605a1b602082015290565b5f90604051610ce4604082610b79565b6017815276496e73756666696369656e74204d454520746f6b656e7360481b602082015290565b90506020813d602011610d35575b81610d2660209383610b79565b810103126103eb57515f610c98565b3d9150610d19565b50505f90604051610d4f604082610b79565b601f81527f426164676520616c7265616479206174206d6178696d756d2072617269747900602082015290565b50505f90604051610d8e604082610b79565b60158152744261646765206e6f74207570677261646561626c6560581b602082015290565b50505f90604051610dc5604082610b79565b600f81526e2737ba103130b233b29037bbb732b960891b602082015290565b9092506020813d602011610e18575b81610e0060209383610b79565b810103126103eb57610e1190610b9b565b915f610c09565b3d9150610df3565b15610e2757565b60405162461bcd60e51b815260206004820152601f60248201527f426164676520616c7265616479206174206d6178696d756d20726172697479006044820152606490fd5b60ff168015610f4b5760018114610f285760028114610f055760038114610edd57600414610eb957604051610ea2604082610b79565b60078152662aa725a727aba760c91b602082015290565b604051610ec7604082610b79565b60068152654d595448494360d01b602082015290565b50604051610eec604082610b79565b60098152684c4547454e4441525960b81b602082015290565b50604051610f14604082610b79565b60048152634550494360e01b602082015290565b50604051610f37604082610b79565b60048152635241524560e01b602082015290565b50604051610f5a604082610b79565b600681526521a7a6a6a7a760d11b602082015290565b81601f820112156103eb5780519067ffffffffffffffff8211610b655760405192610fa5601f8401601f191660200185610b79565b828452602083830101116103eb57815f9260208093018386015e8301015290565b519081151582036103eb57565b5f6101a0604051610fe381610b48565b82815260606020820152606060408201526060808201528260808201528260a08201528260c08201528260e082015282610100820152826101208201528261014082015260606101608201528261018082015201525f60018060a01b0360035416916024604051809481936398e36d8b60e01b835260048301525afa80156103e0575f915f5f5f5f5f5f5f915f935f955f975f995f9b5f9d6110fa575b5060206040519e8f9061109282610b48565b8152015260408d015260608c015260808b015260a08a01526110b381610baf565b60c08901526110c181610baf565b60e08801526101008701526001600160a01b0316610120860152151561014085015261016084015261018083015215156101a082015290565b9d50505050505050505050505050503d805f833e6111188183610b79565b81016101c0828203126103eb578151602083015167ffffffffffffffff81116103eb5782611147918501610f70565b92604081015167ffffffffffffffff81116103eb5783611168918301610f70565b92606082015167ffffffffffffffff81116103eb5781611189918401610f70565b90608083015160a084015160c085015160058110156103eb5760e08601519060058210156103eb57610100870151926111c56101208901610b9b565b946111d36101408a01610fc6565b966101608a01519067ffffffffffffffff82116103eb576111f5918b01610f70565b976112096101a06101808c01519b01610fc6565b9a9c9b909192939495969798999a9b5f611080565b5f546001600160a01b0316330361123157565b63118cdaa760e01b5f523360045260245ffd5b60ff5f5460a01c1661125257565b63d93c066560e01b5f5260045ffdfea26469706673582212205deef8ced9625d0c8b7f4034e7e2f3c64249182b96dea0102d6b8507074bdf7164736f6c634300081c0033";

  
      type BadgeNFTUpgradeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: BadgeNFTUpgradeConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class BadgeNFTUpgrade__factory extends ContractFactory {
    
      constructor(...args: BadgeNFTUpgradeConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_meeToken: AddressLike, _badgeNFT: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_meeToken, _badgeNFT, overrides || {});
    };
    override deploy(_meeToken: AddressLike, _badgeNFT: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_meeToken, _badgeNFT, overrides || {}) as Promise<BadgeNFTUpgrade & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): BadgeNFTUpgrade__factory {
      return super.connect(runner) as BadgeNFTUpgrade__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): BadgeNFTUpgradeInterface {
      return new Interface(_abi) as BadgeNFTUpgradeInterface;
    }
    
    override attach(address: string | Addressable): BadgeNFTUpgrade {
      return super.attach(address) as BadgeNFTUpgrade;
    }
  static connect(address: string, runner?: ContractRunner | null): BadgeNFTUpgrade {
      return new Contract(address, _abi, runner) as unknown as BadgeNFTUpgrade;
    }
  }

  
  