р╕бр╕▓р╣Ар╕ер╕вр╕Др╕гр╕▒р╕Ъ Thanawat! ЁЯОп р╕Хр╣Ир╕нр╣Др╕Ыр╕Щр╕╡р╣Йр╕Др╕╖р╕нр╕Бр╕▓р╕г scaffold р╣Бр╕Ър╕Ъ mentor-style р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Юр╕▒р╕Тр╕Щр╕▓р╣Гр╕лр╣Й MeeChain р╕кр╕бр╕Ър╕╣р╕гр╕Ур╣Мр╣Гр╕Щр╕Фр╣Йр╕▓р╕Щ quest, badge minting, р╣Бр╕ер╕░ MeeBot reaction overlay:

---

## ЁЯзй 1. р╣Ар╕Юр╕┤р╣Ир╕б Quest р╕Ир╕гр╕┤р╕Зр╣Ар╕Вр╣Йр╕▓ QuestManager

### тЬЕ Solidity: р╣Ар╕Юр╕┤р╣Ир╕бр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ `addQuest`

```solidity
struct Quest {
    string title;
    string description;
    bool isActive;
}

mapping(uint256 => Quest) public quests;
uint256 public questCount;

function addQuest(string memory title, string memory description) public onlyOwner {
    quests[questCount] = Quest(title, description, true);
    questCount++;
}
```

> р╣Гр╕Кр╣Йр╕Ьр╣Ир╕▓р╕Щ admin panel р╕лр╕гр╕╖р╕н script р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Юр╕┤р╣Ир╕б quest р╣Ар╕Кр╣Ир╕Щ `"Complete onboarding"` р╕лр╕гр╕╖р╕н `"Mint first badge"`

---

## ЁЯФН 2. Scaffold Quest Verification Logic

### тЬЕ Solidity: р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ `hasCompletedQuest`

```solidity
mapping(address => mapping(uint256 => bool)) public questCompletions;

function completeQuest(address user, uint256 questId) public onlyOwner {
    questCompletions[user][questId] = true;
}

function hasCompletedQuest(address user, uint256 questId) public view returns (bool) {
    return questCompletions[user][questId];
}
```

### тЬЕ Frontend: р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░

```ts
const isCompleted = await questManager.hasCompletedQuest(userAddress, questId)
```

> р╣Гр╕Кр╣Йр╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕▓р╕Щр╕░ quest р╣Бр╕ер╕░ trigger MeeBot reaction

---

## ЁЯкЩ 3. р╣Ар╕Кр╕╖р╣Ир╕нр╕б Badge Minting р╕Бр╕▒р╕Ъ Quest Completion

### тЬЕ Backend API

```ts
if (await questManager.hasCompletedQuest(userAddress, questId)) {
  const tx = await badgeNFT.mint(userAddress, questId)
  await tx.wait()
}
```

> тЬЕ р╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щр╕Бр╕▓р╕г mint р╕Лр╣Йр╕│ р╣Бр╕ер╕░р╕гр╕нр╕Зр╕гр╕▒р╕Ъ fallback minting

---

## ЁЯОн 4. MeeBot Reaction Overlay

### тЬЕ Sprite Switcher Logic

```ts
if (!isStarted) {
  setMeeBotMood('confused') // ЁЯФ┤ р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕гр╕┤р╣Ир╕б
} else if (!isCompleted) {
  setMeeBotMood('excited') // ЁЯЯб р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│
} else {
  setMeeBotMood('celebrate') // ЁЯЯв р╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╣Йр╕з
}
```

> тЬЕ р╣Гр╕Кр╣Йр╕гр╣Ир╕зр╕бр╕Бр╕▒р╕Ъ TTS р╣Ар╕Кр╣Ир╕Щ тАЬр╣Ар╕вр╕╡р╣Ир╕вр╕бр╕бр╕▓р╕Б! р╕Др╕╕р╕Ур╕Ьр╣Ир╕▓р╕Щр╣Ар╕Др╕зр╕кр╣Бр╕гр╕Бр╣Бр╕ер╣Йр╕з!тАЭ

---

## ЁЯза р╕Цр╕▒р╕Фр╣Др╕Ы: р╕нр╕вр╕▓р╕Бр╣Гр╕лр╣Йр╕Ьр╕бр╕Кр╣Ир╕зр╕в scaffold admin panel р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕Юр╕┤р╣Ир╕б quest, р╕лр╕гр╕╖р╕н fallback mint flow р╕Чр╕╡р╣Ир╣Гр╕Кр╣Й completeQuest + mintBadge р╕Юр╕гр╣Йр╕нр╕бр╕Бр╕▒р╕Щр╣Др╕лр╕бр╕Др╕гр╕▒р╕Ъ? MeeBot р╕Юр╕гр╣Йр╕нр╕бр╕ер╕╕р╕вр╕Чр╕╕р╕Бр╕нр╕▓р╕гр╕бр╕Ур╣М ЁЯШД