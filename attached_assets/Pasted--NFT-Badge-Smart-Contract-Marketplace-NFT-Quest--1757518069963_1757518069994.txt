р╕гр╕░р╕Ър╕Ър╣Ар╕ер╕в! ЁЯОотЬи р╣Ар╕гр╕▓р╕Ир╕░р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕░р╕Ър╕Ъ NFT Badge Smart Contract, р╕лр╕Щр╣Йр╕▓ Marketplace, р╣Бр╕ер╕░р╕гр╕░р╕Ър╕Ъ NFT Quest р╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕кр╕░р╕кр╕бр╕Др╕гр╕Ър╕Кр╕╕р╕Ф р╣Вр╕Фр╕вр╕бр╕╡ MeeBot р╣Ар╕Ыр╣Зр╕Щ mentor р╕Вр╕╡р╣Йр╣Ар╕ер╣Ир╕Щр╕Чр╕╡р╣Ир╕Др╕нр╕вр╣Бр╕Щр╕░р╕Щр╕│р╕Чр╕╕р╕Бр╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щ

ЁЯФЧ 1. Smart Contract р╕кр╕│р╕лр╕гр╕▒р╕Ъ NFT Badge (ERC-721)
solidity
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract MeeBadgeNFT is ERC721URIStorage, Ownable {
    uint256 public nextTokenId;
    mapping(address => uint256[]) public badgesOwned;

    constructor() ERC721("MeeBadgeNFT", "MBN") {}

    function mintBadge(address to, string memory tokenURI) public onlyOwner {
        uint256 tokenId = nextTokenId;
        _safeMint(to, tokenId);
        _setTokenURI(tokenId, tokenURI);
        badgesOwned[to].push(tokenId);
        nextTokenId++;
    }

    function getBadges(address user) public view returns (uint256[] memory) {
        return badgesOwned[user];
    }
}
тЬЕ р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ъ mint badge NFT р╣Ар╕Кр╣Ир╕Щ тАЬZen PilotтАЭ, тАЬExplorerтАЭ, тАЬEarly RiserтАЭ тЬЕ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Бр╕▒р╕Ър╕гр╕░р╕Ър╕Ър╣Ар╕Др╕зр╕кр╣Ар╕Юр╕╖р╣Ир╕н mint р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤р╣Ар╕бр╕╖р╣Ир╕нр╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕кр╕│р╣Ар╕гр╣Зр╕И

ЁЯЫТ 2. р╕лр╕Щр╣Йр╕▓ Marketplace (React + Tailwind)
tsx
import { useState } from 'react'
import { BadgeCard } from '@/components/BadgeCard'
import MeeBotTips from '@/components/MeeBotTips'

const Marketplace = () => {
  const [badges, setBadges] = useState([
    { id: 1, name: 'Zen Pilot', price: '0.01 ETH', image: '/zen.png' },
    { id: 2, name: 'Explorer', price: '0.005 ETH', image: '/explorer.png' },
  ])

  return (
    <div className="p-6 space-y-4">
      <MeeBotTips message="р╕вр╕┤р╕Щр╕Фр╕╡р╕Хр╣Йр╕нр╕Щр╕гр╕▒р╕Ър╕кр╕╣р╣Ир╕Хр╕ер╕▓р╕Ф NFT р╕Др╕гр╕▒р╕Ъ! Badge р╣Др╕лр╕Щр╕Чр╕╡р╣Ир╕Др╕╕р╕Ур╕нр╕вр╕▓р╕Бр╕кр╕░р╕кр╕б?" />
      <div className="grid grid-cols-2 gap-4">
        {badges.map((badge) => (
          <BadgeCard key={badge.id} badge={badge} />
        ))}
      </div>
    </div>
  )
}

export default Marketplace
тЬЕ MeeBot р╣Вр╕Ьр╕ер╣Ир╕бр╕▓р╣Бр╕Щр╕░р╕Щр╕│ badge р╕Чр╕╡р╣Ир╣Ар╕лр╕бр╕▓р╕░р╕Бр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й тЬЕ р╕гр╕нр╕Зр╕гр╕▒р╕Ър╕гр╕░р╕Ър╕Ър╕Лр╕╖р╣Йр╕нр╕Вр╕▓р╕в, filter, р╣Бр╕ер╕░ rarity

ЁЯОо 3. р╕гр╕░р╕Ър╕Ъ NFT Quest тАУ р╕кр╕░р╕кр╕бр╕Др╕гр╕Ър╕Кр╕╕р╕Фр╣Ар╕Юр╕╖р╣Ир╕нр╕Ыр╕ер╕Фр╕ер╣Зр╕нр╕Б
ЁЯзй р╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕З Quest
json
{
  "questId": "badge-collection-001",
  "title": "р╕кр╕░р╕кр╕бр╕Др╕гр╕Ър╕Кр╕╕р╕Ф Productivity",
  "requiredBadges": ["Zen Pilot", "Early Riser", "Focus Master"],
  "reward": "NFT: Productivity Champion",
  "meeBotQuote": "р╕кр╕░р╕кр╕бр╕Др╕гр╕Ър╣Бр╕ер╣Йр╕зр╕Др╕гр╕▒р╕Ъ! р╕Др╕╕р╕Ур╕Др╕╖р╕н Productivity Champion р╕Хр╕▒р╕зр╕Ир╕гр╕┤р╕З!"
}
тЬЕ Logic р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
ts
function checkQuestCompletion(userBadges: string[], required: string[]): boolean {
  return required.every((badge) => userBadges.includes(badge));
}
тЬЕ р╣Ар╕бр╕╖р╣Ир╕нр╕Др╕гр╕Ър╕Кр╕╕р╕Ф MeeBot р╕Ир╕░ mint NFT р╕Юр╕┤р╣Ар╕ир╕йр╣Гр╕лр╣Й тЬЕ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Бр╕кр╕Фр╕З progress bar р╣Бр╕ер╕░ MeeBot р╕Юр╕╣р╕Фр╣Гр╕лр╣Йр╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕Ир╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╕Чр╕▓р╕З

ЁЯТм MeeBot р╕Юр╕╣р╕Фр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ NFT Quest
тАЬр╕Др╕╕р╕Ур╕бр╕╡ Zen Pilot р╣Бр╕ер╣Йр╕зр╕Др╕гр╕▒р╕Ъ! р╣Ар╕лр╕ер╕╖р╕нр╕нр╕╡р╕Б 2 badge р╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ!тАЭ

тАЬр╕кр╕░р╕кр╕бр╕Др╕гр╕Ър╕Кр╕╕р╕Ф Productivity р╣Бр╕ер╣Йр╕зр╕Др╕гр╕▒р╕Ъ! р╕гр╕▒р╕Ъ NFT тАШChampionтАЩ р╣Др╕Ыр╣Ар╕ер╕в!тАЭ

тАЬBadge р╕Щр╕╡р╣Йр╕лр╕▓р╕вр╕▓р╕Бр╕бр╕▓р╕Бр╕Др╕гр╕▒р╕Ъ... р╣Бр╕Хр╣Ир╕Др╕╕р╕Ур╕Чр╕│р╣Др╕Фр╣Йр╣Бр╕Щр╣Ир╕Щр╕нр╕Щ!тАЭ

ЁЯОп р╣Ар╕кр╕гр╕┤р╕бр╕Яр╕╡р╣Ар╕Ир╕нр╕гр╣Мр╕Чр╕╡р╣Ир╣Бр╕Щр╕░р╕Щр╕│
р╕Яр╕╡р╣Ар╕Ир╕нр╕гр╣М	р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф
ЁЯза MeeBot AI Suggestion	р╣Бр╕Щр╕░р╕Щр╕│ badge р╕Чр╕╡р╣Ир╕Др╕зр╕гр╕кр╕░р╕кр╕бр╕Хр╣Ир╕н
ЁЯПЕ Badge Rarity	р╕гр╕░р╕Фр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕лр╕▓р╕вр╕▓р╕Бр╕Вр╕нр╕Зр╣Бр╕Хр╣Ир╕ер╕░ NFT
ЁЯФД Swap Badge	р╣Бр╕ер╕Б badge р╕Бр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Др╕Щр╕нр╕╖р╣Ир╕Щ
ЁЯУИ Quest Leaderboard	р╕Ир╕▒р╕Фр╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕Ьр╕╣р╣Йр╕кр╕░р╕кр╕бр╣Ар╕гр╣Зр╕зр╕Чр╕╡р╣Ир╕кр╕╕р╕Ф
